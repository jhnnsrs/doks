"use strict";(self.webpackChunkdoks=self.webpackChunkdoks||[]).push([[54459],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>h});var l=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,l,o=function(e,t){if(null==e)return{};var a,l,o={},n=Object.keys(e);for(l=0;l<n.length;l++)a=n[l],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(l=0;l<n.length;l++)a=n[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var r=l.createContext({}),c=function(e){var t=l.useContext(r),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=c(e.components);return l.createElement(r.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},p=l.forwardRef((function(e,t){var a=e.components,o=e.mdxType,n=e.originalType,r=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),p=c(a),h=o,y=p["".concat(r,".").concat(h)]||p[h]||d[h]||n;return a?l.createElement(y,i(i({ref:t},m),{},{components:a})):l.createElement(y,i({ref:t},m))}));function h(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=a.length,i=new Array(n);i[0]=p;var s={};for(var r in t)hasOwnProperty.call(t,r)&&(s[r]=t[r]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<n;c++)i[c]=a[c];return l.createElement.apply(null,i)}return l.createElement.apply(null,a)}p.displayName="MDXCreateElement"},59696:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>h,Bullet:()=>d,SpecifiedBy:()=>p,assets:()=>c,contentTitle:()=>s,default:()=>f,frontMatter:()=>i,metadata:()=>r,toc:()=>m});var l=a(87462),o=a(67294),n=a(3905);const i={id:"physical-size",title:"PhysicalSize",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},s=void 0,r={unversionedId:"schemas/mikro/objects/physical-size",id:"schemas/mikro/objects/physical-size",title:"PhysicalSize",description:"Physical size of the image",source:"@site/docs/schemas/mikro/objects/physical-size.mdx",sourceDirName:"schemas/mikro/objects",slug:"/schemas/mikro/objects/physical-size",permalink:"/doks/docs/schemas/mikro/objects/physical-size",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/schemas/mikro/objects/physical-size.mdx",tags:[],version:"current",frontMatter:{id:"physical-size",title:"PhysicalSize",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},sidebar:"tutorialSidebar"},c={},m=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>PhysicalSize.<b>x</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-physicalsizebxbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>PhysicalSize.<b>y</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-physicalsizebybcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>PhysicalSize.<b>z</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-physicalsizebzbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>PhysicalSize.<b>t</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-physicalsizebtbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>PhysicalSize.<b>c</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-physicalsizebcbcodefloat-",level:4},{value:"Member of",id:"member-of",level:3}],d=()=>(0,n.kt)(o.Fragment,null,(0,n.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,n.kt)(o.Fragment,null,"Specification",(0,n.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),h=e=>(0,n.kt)(o.Fragment,null,(0,n.kt)("span",{class:"badge badge--"+e.class},e.text)),y={toc:m,Bullet:d,SpecifiedBy:p,Badge:h};function f(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,l.Z)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Physical size of the image "),(0,n.kt)("p",null,"Each dimensions of the image has a physical size. This is the size of the\npixel in the image. The physical size is given in micrometers on a PIXEL\nbasis. This means that the physical size of the image is the size of the",(0,n.kt)("br",{parentName:"p"}),"\n","pixel in the image * the number of pixels in the image. For example, if\nthe image is 1000x1000 pixels and the physical size of the image is 3 (x params) x 3 (y params),\nmicrometer, the physical size of the image is 3000x3000 micrometer. If the image"),(0,n.kt)("p",null,"The t dimension is given in ms, since the time is given in ms.\nThe C dimension is given in nm, since the wavelength is given in nm."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-graphql"},"type PhysicalSize {\n  x: Float\n  y: Float\n  z: Float\n  t: Float\n  c: Float\n}\n")),(0,n.kt)("h3",{id:"fields"},"Fields"),(0,n.kt)("h4",{id:"code-style-fontweight-normal-physicalsizebxbcodefloat-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"PhysicalSize.",(0,n.kt)("b",null,"x"))),(0,n.kt)(d,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/schemas/mikro/scalars/float"},(0,n.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,n.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Physical size of ",(0,n.kt)("em",{parentName:"p"},"one")," Pixel in the x dimension (in \xb5m)")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-physicalsizebybcodefloat-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"PhysicalSize.",(0,n.kt)("b",null,"y"))),(0,n.kt)(d,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/schemas/mikro/scalars/float"},(0,n.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,n.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Physical size of ",(0,n.kt)("em",{parentName:"p"},"one")," Pixel in the t dimension (in \xb5m)")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-physicalsizebzbcodefloat-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"PhysicalSize.",(0,n.kt)("b",null,"z"))),(0,n.kt)(d,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/schemas/mikro/scalars/float"},(0,n.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,n.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Physical size of ",(0,n.kt)("em",{parentName:"p"},"one")," Pixel in the z dimension (in \xb5m)")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-physicalsizebtbcodefloat-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"PhysicalSize.",(0,n.kt)("b",null,"t"))),(0,n.kt)(d,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/schemas/mikro/scalars/float"},(0,n.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,n.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Physical size of ",(0,n.kt)("em",{parentName:"p"},"one")," Pixel in the t dimension (in ms)")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-physicalsizebcbcodefloat-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"PhysicalSize.",(0,n.kt)("b",null,"c"))),(0,n.kt)(d,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/schemas/mikro/scalars/float"},(0,n.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,n.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Physical size of ",(0,n.kt)("em",{parentName:"p"},"one")," Pixel in the c dimension (in \xb5m)")),(0,n.kt)("h3",{id:"member-of"},"Member of"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/mikro/objects/omero"},(0,n.kt)("inlineCode",{parentName:"a"},"Omero")),"  ",(0,n.kt)(h,{class:"secondary",text:"object",mdxType:"Badge"})))}f.isMDXComponent=!0}}]);