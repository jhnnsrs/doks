"use strict";(self.webpackChunkdoks=self.webpackChunkdoks||[]).push([[73564],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>m});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=o.createContext({}),d=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=d(e.components);return o.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},k=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),k=d(r),m=n,h=k["".concat(c,".").concat(m)]||k[m]||p[m]||a;return r?o.createElement(h,l(l({ref:t},s),{},{components:r})):o.createElement(h,l({ref:t},s))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,l=new Array(a);l[0]=k;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var d=2;d<a;d++)l[d]=r[d];return o.createElement.apply(null,l)}return o.createElement.apply(null,r)}k.displayName="MDXCreateElement"},56706:(e,t,r)=>{r.r(t),r.d(t,{Badge:()=>m,Bullet:()=>p,SpecifiedBy:()=>k,assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>c,toc:()=>s});var o=r(87462),n=r(67294),a=r(3905);const l={id:"child-port",title:"ChildPort",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},i=void 0,c={unversionedId:"schemas/arkitekt/objects/child-port",id:"schemas/arkitekt/objects/child-port",title:"ChildPort",description:"No description",source:"@site/docs/schemas/arkitekt/objects/child-port.mdx",sourceDirName:"schemas/arkitekt/objects",slug:"/schemas/arkitekt/objects/child-port",permalink:"/doks/docs/schemas/arkitekt/objects/child-port",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/schemas/arkitekt/objects/child-port.mdx",tags:[],version:"current",frontMatter:{id:"child-port",title:"ChildPort",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},sidebar:"tutorialSidebar"},d={},s=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>ChildPort.<b>kind</b></code><Bullet /><code>PortKind</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-childportbkindbcodeportkind-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ChildPort.<b>description</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-childportbdescriptionbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ChildPort.<b>identifier</b></code><Bullet /><code>Identifier</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-childportbidentifierbcodeidentifier-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ChildPort.<b>child</b></code><Bullet /><code>ChildPort</code> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-childportbchildbcodechildport-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ChildPort.<b>nullable</b></code><Bullet /><code>Boolean!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-childportbnullablebcodeboolean--",level:4},{value:"Member of",id:"member-of",level:3}],p=()=>(0,a.kt)(n.Fragment,null,(0,a.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),k=e=>(0,a.kt)(n.Fragment,null,"Specification",(0,a.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),m=e=>(0,a.kt)(n.Fragment,null,(0,a.kt)("span",{class:"badge badge--"+e.class},e.text)),h={toc:s,Bullet:p,SpecifiedBy:k,Badge:m};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,o.Z)({},h,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"No description"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"type ChildPort {\n  kind: PortKind\n  description: String\n  identifier: Identifier\n  child: ChildPort\n  nullable: Boolean!\n}\n")),(0,a.kt)("h3",{id:"fields"},"Fields"),(0,a.kt)("h4",{id:"code-style-fontweight-normal-childportbkindbcodeportkind-"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"ChildPort.",(0,a.kt)("b",null,"kind"))),(0,a.kt)(p,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"h4",href:"/docs/schemas/arkitekt/enums/port-kind"},(0,a.kt)("inlineCode",{parentName:"a"},"PortKind"))," ",(0,a.kt)(m,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"the type of input")),(0,a.kt)("h4",{id:"code-style-fontweight-normal-childportbdescriptionbcodestring-"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"ChildPort.",(0,a.kt)("b",null,"description"))),(0,a.kt)(p,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"h4",href:"/docs/schemas/arkitekt/scalars/string"},(0,a.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,a.kt)(m,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"A description for this Port")),(0,a.kt)("h4",{id:"code-style-fontweight-normal-childportbidentifierbcodeidentifier-"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"ChildPort.",(0,a.kt)("b",null,"identifier"))),(0,a.kt)(p,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"h4",href:"/docs/schemas/arkitekt/scalars/identifier"},(0,a.kt)("inlineCode",{parentName:"a"},"Identifier"))," ",(0,a.kt)(m,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"The corresponding Model")),(0,a.kt)("h4",{id:"code-style-fontweight-normal-childportbchildbcodechildport-"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"ChildPort.",(0,a.kt)("b",null,"child"))),(0,a.kt)(p,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"h4",href:"/docs/schemas/arkitekt/objects/child-port"},(0,a.kt)("inlineCode",{parentName:"a"},"ChildPort"))," ",(0,a.kt)(m,{class:"secondary",text:"object",mdxType:"Badge"})),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"The child")),(0,a.kt)("h4",{id:"code-style-fontweight-normal-childportbnullablebcodeboolean--"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"ChildPort.",(0,a.kt)("b",null,"nullable"))),(0,a.kt)(p,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"h4",href:"/docs/schemas/arkitekt/scalars/boolean"},(0,a.kt)("inlineCode",{parentName:"a"},"Boolean!"))," ",(0,a.kt)(m,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,a.kt)(m,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Is this argument nullable")),(0,a.kt)("h3",{id:"member-of"},"Member of"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/arg-port"},(0,a.kt)("inlineCode",{parentName:"a"},"ArgPort")),"  ",(0,a.kt)(m,{class:"secondary",text:"object",mdxType:"Badge"}),(0,a.kt)(p,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/child-port"},(0,a.kt)("inlineCode",{parentName:"a"},"ChildPort")),"  ",(0,a.kt)(m,{class:"secondary",text:"object",mdxType:"Badge"}),(0,a.kt)(p,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/interfaces/port"},(0,a.kt)("inlineCode",{parentName:"a"},"Port")),"  ",(0,a.kt)(m,{class:"secondary",text:"interface",mdxType:"Badge"}),(0,a.kt)(p,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/return-port"},(0,a.kt)("inlineCode",{parentName:"a"},"ReturnPort")),"  ",(0,a.kt)(m,{class:"secondary",text:"object",mdxType:"Badge"})))}u.isMDXComponent=!0}}]);