"use strict";(self.webpackChunkdoks=self.webpackChunkdoks||[]).push([[50427],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>y});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),c=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(a),y=r,h=p["".concat(i,".").concat(y)]||p[y]||m[y]||o;return a?n.createElement(h,s(s({ref:t},d),{},{components:a})):n.createElement(h,s({ref:t},d))}));function y(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=p;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var c=2;c<o;c++)s[c]=a[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},32366:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>y,Bullet:()=>m,SpecifiedBy:()=>p,assets:()=>c,contentTitle:()=>l,default:()=>k,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var n=a(87462),r=a(67294),o=a(3905);const s={id:"myrepresentations",title:"myrepresentations",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},l=void 0,i={unversionedId:"schemas/mikro/queries/myrepresentations",id:"schemas/mikro/queries/myrepresentations",title:"myrepresentations",description:"My Representatoin runs a fast query on the database to return all",source:"@site/docs/schemas/mikro/queries/myrepresentations.mdx",sourceDirName:"schemas/mikro/queries",slug:"/schemas/mikro/queries/myrepresentations",permalink:"/doks/docs/schemas/mikro/queries/myrepresentations",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/schemas/mikro/queries/myrepresentations.mdx",tags:[],version:"current",frontMatter:{id:"myrepresentations",title:"myrepresentations",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},sidebar:"tutorialSidebar"},c={},d=[{value:"Arguments",id:"arguments",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>myrepresentations.<b>name</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-myrepresentationsbnamebcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>myrepresentations.<b>pinned</b></code><Bullet /><code>Boolean</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-myrepresentationsbpinnedbcodeboolean-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>myrepresentations.<b>tags</b></code><Bullet /><code>[String]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-myrepresentationsbtagsbcodestring--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>myrepresentations.<b>ids</b></code><Bullet /><code>[String]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-myrepresentationsbidsbcodestring--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>myrepresentations.<b>experiments</b></code><Bullet /><code>[ID]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-myrepresentationsbexperimentsbcodeid--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>myrepresentations.<b>samples</b></code><Bullet /><code>[ID]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-myrepresentationsbsamplesbcodeid--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>myrepresentations.<b>noChildren</b></code><Bullet /><code>Boolean</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-myrepresentationsbnochildrenbcodeboolean-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>myrepresentations.<b>ordering</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-myrepresentationsborderingbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>myrepresentations.<b>hasMetric</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-myrepresentationsbhasmetricbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>myrepresentations.<b>order</b></code><Bullet /><code>[String]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-myrepresentationsborderbcodestring--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>myrepresentations.<b>variety</b></code><Bullet /><code>RepresentationVarietyInput</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-myrepresentationsbvarietybcoderepresentationvarietyinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>myrepresentations.<b>forceThumbnail</b></code><Bullet /><code>Boolean</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-myrepresentationsbforcethumbnailbcodeboolean-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>myrepresentations.<b>createdAfter</b></code><Bullet /><code>DateTime</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-myrepresentationsbcreatedafterbcodedatetime-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>myrepresentations.<b>creator</b></code><Bullet /><code>ID</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-myrepresentationsbcreatorbcodeid-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>myrepresentations.<b>createdBefore</b></code><Bullet /><code>DateTime</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-myrepresentationsbcreatedbeforebcodedatetime-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>myrepresentations.<b>derivedTags</b></code><Bullet /><code>[String]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-myrepresentationsbderivedtagsbcodestring--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>myrepresentations.<b>limit</b></code><Bullet /><code>Int</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-myrepresentationsblimitbcodeint-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>myrepresentations.<b>offset</b></code><Bullet /><code>Int</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-myrepresentationsboffsetbcodeint-",level:4},{value:"Type",id:"type",level:3},{value:'<code>Representation</code> <Badge class="secondary" text="object"/>',id:"representation-",level:4}],m=()=>(0,o.kt)(r.Fragment,null,(0,o.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,o.kt)(r.Fragment,null,"Specification",(0,o.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),y=e=>(0,o.kt)(r.Fragment,null,(0,o.kt)("span",{class:"badge badge--"+e.class},e.text)),h={toc:d,Bullet:m,SpecifiedBy:p,Badge:y};function k(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"My Representatoin runs a fast query on the database to return all\nRepresentation that the user has created. This query is faster than\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"representations")," query, but it does not return all Representation that\nthe user has access to."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"myrepresentations(\n  name: String\n  pinned: Boolean\n  tags: [String]\n  ids: [String]\n  experiments: [ID]\n  samples: [ID]\n  noChildren: Boolean\n  ordering: String\n  hasMetric: String\n  order: [String]\n  variety: RepresentationVarietyInput\n  forceThumbnail: Boolean\n  createdAfter: DateTime\n  creator: ID\n  createdBefore: DateTime\n  derivedTags: [String]\n  limit: Int\n  offset: Int\n): [Representation]\n")),(0,o.kt)("h3",{id:"arguments"},"Arguments"),(0,o.kt)("h4",{id:"code-style-fontweight-normal-myrepresentationsbnamebcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"myrepresentations.",(0,o.kt)("b",null,"name"))),(0,o.kt)(m,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/schemas/mikro/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(y,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Search for substring of name")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-myrepresentationsbpinnedbcodeboolean-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"myrepresentations.",(0,o.kt)("b",null,"pinned"))),(0,o.kt)(m,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/schemas/mikro/scalars/boolean"},(0,o.kt)("inlineCode",{parentName:"a"},"Boolean"))," ",(0,o.kt)(y,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Filter by pinned")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-myrepresentationsbtagsbcodestring--"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"myrepresentations.",(0,o.kt)("b",null,"tags"))),(0,o.kt)(m,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/schemas/mikro/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"[String]"))," ",(0,o.kt)(y,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,o.kt)(y,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The tags you want to filter by")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-myrepresentationsbidsbcodestring--"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"myrepresentations.",(0,o.kt)("b",null,"ids"))),(0,o.kt)(m,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/schemas/mikro/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"[String]"))," ",(0,o.kt)(y,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,o.kt)(y,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The ids you want to filter by")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-myrepresentationsbexperimentsbcodeid--"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"myrepresentations.",(0,o.kt)("b",null,"experiments"))),(0,o.kt)(m,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/schemas/mikro/scalars/id"},(0,o.kt)("inlineCode",{parentName:"a"},"[ID]"))," ",(0,o.kt)(y,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,o.kt)(y,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The Experiment the Sample of this Representation belongs to")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-myrepresentationsbsamplesbcodeid--"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"myrepresentations.",(0,o.kt)("b",null,"samples"))),(0,o.kt)(m,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/schemas/mikro/scalars/id"},(0,o.kt)("inlineCode",{parentName:"a"},"[ID]"))," ",(0,o.kt)(y,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,o.kt)(y,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null),(0,o.kt)("h4",{id:"code-style-fontweight-normal-myrepresentationsbnochildrenbcodeboolean-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"myrepresentations.",(0,o.kt)("b",null,"noChildren"))),(0,o.kt)(m,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/schemas/mikro/scalars/boolean"},(0,o.kt)("inlineCode",{parentName:"a"},"Boolean"))," ",(0,o.kt)(y,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Only show Representations without children")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-myrepresentationsborderingbcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"myrepresentations.",(0,o.kt)("b",null,"ordering"))),(0,o.kt)(m,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/schemas/mikro/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(y,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Ordering")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-myrepresentationsbhasmetricbcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"myrepresentations.",(0,o.kt)("b",null,"hasMetric"))),(0,o.kt)(m,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/schemas/mikro/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(y,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Filter by required Metric Keys (seperated by ,)")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-myrepresentationsborderbcodestring--"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"myrepresentations.",(0,o.kt)("b",null,"order"))),(0,o.kt)(m,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/schemas/mikro/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"[String]"))," ",(0,o.kt)(y,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,o.kt)(y,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Order by Keys")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-myrepresentationsbvarietybcoderepresentationvarietyinput-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"myrepresentations.",(0,o.kt)("b",null,"variety"))),(0,o.kt)(m,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/schemas/mikro/enums/representation-variety-input"},(0,o.kt)("inlineCode",{parentName:"a"},"RepresentationVarietyInput"))," ",(0,o.kt)(y,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null),(0,o.kt)("h4",{id:"code-style-fontweight-normal-myrepresentationsbforcethumbnailbcodeboolean-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"myrepresentations.",(0,o.kt)("b",null,"forceThumbnail"))),(0,o.kt)(m,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/schemas/mikro/scalars/boolean"},(0,o.kt)("inlineCode",{parentName:"a"},"Boolean"))," ",(0,o.kt)(y,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null),(0,o.kt)("h4",{id:"code-style-fontweight-normal-myrepresentationsbcreatedafterbcodedatetime-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"myrepresentations.",(0,o.kt)("b",null,"createdAfter"))),(0,o.kt)(m,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/schemas/mikro/scalars/date-time"},(0,o.kt)("inlineCode",{parentName:"a"},"DateTime"))," ",(0,o.kt)(y,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null),(0,o.kt)("h4",{id:"code-style-fontweight-normal-myrepresentationsbcreatorbcodeid-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"myrepresentations.",(0,o.kt)("b",null,"creator"))),(0,o.kt)(m,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/schemas/mikro/scalars/id"},(0,o.kt)("inlineCode",{parentName:"a"},"ID"))," ",(0,o.kt)(y,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null),(0,o.kt)("h4",{id:"code-style-fontweight-normal-myrepresentationsbcreatedbeforebcodedatetime-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"myrepresentations.",(0,o.kt)("b",null,"createdBefore"))),(0,o.kt)(m,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/schemas/mikro/scalars/date-time"},(0,o.kt)("inlineCode",{parentName:"a"},"DateTime"))," ",(0,o.kt)(y,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null),(0,o.kt)("h4",{id:"code-style-fontweight-normal-myrepresentationsbderivedtagsbcodestring--"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"myrepresentations.",(0,o.kt)("b",null,"derivedTags"))),(0,o.kt)(m,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/schemas/mikro/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"[String]"))," ",(0,o.kt)(y,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,o.kt)(y,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The tags you want to filter by")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-myrepresentationsblimitbcodeint-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"myrepresentations.",(0,o.kt)("b",null,"limit"))),(0,o.kt)(m,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/schemas/mikro/scalars/int"},(0,o.kt)("inlineCode",{parentName:"a"},"Int"))," ",(0,o.kt)(y,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Query limit")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-myrepresentationsboffsetbcodeint-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"myrepresentations.",(0,o.kt)("b",null,"offset"))),(0,o.kt)(m,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/schemas/mikro/scalars/int"},(0,o.kt)("inlineCode",{parentName:"a"},"Int"))," ",(0,o.kt)(y,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Query offset")),(0,o.kt)("h3",{id:"type"},"Type"),(0,o.kt)("h4",{id:"representation-"},(0,o.kt)("a",{parentName:"h4",href:"/docs/schemas/mikro/objects/representation"},(0,o.kt)("inlineCode",{parentName:"a"},"Representation"))," ",(0,o.kt)(y,{class:"secondary",text:"object",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"A Representation is 5-dimensional representation of an image")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Mikro stores each image as a 5-dimensional representation. The dimensions are:\n- t: time\n- c: channel\n- z: z-stack\n- x: x-dimension\n- y: y-dimension\n\nThis ensures a unified api for all images, regardless of their original dimensions. Another main\ndetermining factor for a representation is its variety:\nA representation can be a raw image representating voxels (VOXEL)\nor a segmentation mask representing instances of a class. (MASK)\nIt can also representate a human perception of the image (RGB) or a human perception of the mask (RGBMASK)\n\n# Meta\n\nMeta information is stored in the omero field which gives access to the omero-meta data. Refer to the omero documentation for more information.\n\n\n#Origins and Derivations\n\nImages can be filtered, which means that a new representation is created from the other (original) representations. This new representation is then linked to the original representations. This way, we can always trace back to the original representation.\nBoth are encapsulaed in the origins and derived fields.\n\nRepresentations belong to *one* sample. Every transaction to our image data is still part of the original acuqistion, so also filtered images are refering back to the sample\nEach iamge has also a name, which is used to identify the image. The name is unique within a sample.\nFile and Rois that are used to create images are saved in the file origins and roi origins repectively.\n")),(0,o.kt)("blockquote",null))}k.isMDXComponent=!0}}]);