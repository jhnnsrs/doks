"use strict";(self.webpackChunkdoks=self.webpackChunkdoks||[]).push([[83692],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>k});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},c=Object.keys(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),l=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,i=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=l(a),k=n,u=m["".concat(i,".").concat(k)]||m[k]||d[k]||c;return a?r.createElement(u,s(s({ref:t},p),{},{components:a})):r.createElement(u,s({ref:t},p))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,s=new Array(c);s[0]=m;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:n,s[1]=o;for(var l=2;l<c;l++)s[l]=a[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},97987:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>k,Bullet:()=>d,SpecifiedBy:()=>m,assets:()=>l,contentTitle:()=>o,default:()=>f,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var r=a(87462),n=a(67294),c=a(3905);const s={id:"generic-scalar",title:"GenericScalar",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},o=void 0,i={unversionedId:"schemas/arkitekt/scalars/generic-scalar",id:"schemas/arkitekt/scalars/generic-scalar",title:"GenericScalar",description:"The GenericScalar scalar type represents a generic",source:"@site/docs/schemas/arkitekt/scalars/generic-scalar.mdx",sourceDirName:"schemas/arkitekt/scalars",slug:"/schemas/arkitekt/scalars/generic-scalar",permalink:"/doks/docs/schemas/arkitekt/scalars/generic-scalar",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/schemas/arkitekt/scalars/generic-scalar.mdx",tags:[],version:"current",frontMatter:{id:"generic-scalar",title:"GenericScalar",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},sidebar:"tutorialSidebar"},l={},p=[{value:"Member of",id:"member-of",level:3}],d=()=>(0,c.kt)(n.Fragment,null,(0,c.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),m=e=>(0,c.kt)(n.Fragment,null,"Specification",(0,c.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),k=e=>(0,c.kt)(n.Fragment,null,(0,c.kt)("span",{class:"badge badge--"+e.class},e.text)),u={toc:p,Bullet:d,SpecifiedBy:m,Badge:k};function f(e){let{components:t,...a}=e;return(0,c.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"The ",(0,c.kt)("inlineCode",{parentName:"p"},"GenericScalar")," scalar type represents a generic\nGraphQL scalar value that could be:\nString, Boolean, Int, Float, List or Object."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-graphql"},"scalar GenericScalar\n")),(0,c.kt)("h3",{id:"member-of"},"Member of"),(0,c.kt)("p",null,(0,c.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/assignation"},(0,c.kt)("inlineCode",{parentName:"a"},"Assignation")),"  ",(0,c.kt)(k,{class:"secondary",text:"object",mdxType:"Badge"}),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/choice"},(0,c.kt)("inlineCode",{parentName:"a"},"Choice")),"  ",(0,c.kt)(k,{class:"secondary",text:"object",mdxType:"Badge"}),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/mutations/create-template"},(0,c.kt)("inlineCode",{parentName:"a"},"createTemplate")),"  ",(0,c.kt)(k,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/inputs/definition-input"},(0,c.kt)("inlineCode",{parentName:"a"},"DefinitionInput")),"  ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"}),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/node"},(0,c.kt)("inlineCode",{parentName:"a"},"Node")),"  ",(0,c.kt)(k,{class:"secondary",text:"object",mdxType:"Badge"}),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/mutations/provide"},(0,c.kt)("inlineCode",{parentName:"a"},"provide")),"  ",(0,c.kt)(k,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/provision"},(0,c.kt)("inlineCode",{parentName:"a"},"Provision")),"  ",(0,c.kt)(k,{class:"secondary",text:"object",mdxType:"Badge"}),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/structure"},(0,c.kt)("inlineCode",{parentName:"a"},"Structure")),"  ",(0,c.kt)(k,{class:"secondary",text:"object",mdxType:"Badge"}),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/template"},(0,c.kt)("inlineCode",{parentName:"a"},"Template")),"  ",(0,c.kt)(k,{class:"secondary",text:"object",mdxType:"Badge"}),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/user"},(0,c.kt)("inlineCode",{parentName:"a"},"User")),"  ",(0,c.kt)(k,{class:"secondary",text:"object",mdxType:"Badge"})))}f.isMDXComponent=!0}}]);