"use strict";(self.webpackChunkdoks=self.webpackChunkdoks||[]).push([[44402],{3905:(e,t,o)=>{o.d(t,{Zo:()=>d,kt:()=>f});var n=o(67294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function s(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?s(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):s(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)o=s[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)o=s[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var c=n.createContext({}),m=function(e){var t=n.useContext(c),o=t;return e&&(o="function"==typeof e?e(t):r(r({},t),e)),o},d=function(e){var t=m(e.components);return n.createElement(c.Provider,{value:t},e.children)},i={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,s=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=m(o),f=a,p=u["".concat(c,".").concat(f)]||u[f]||i[f]||s;return o?n.createElement(p,r(r({ref:t},d),{},{components:o})):n.createElement(p,r({ref:t},d))}));function f(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=o.length,r=new Array(s);r[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,r[1]=l;for(var m=2;m<s;m++)r[m]=o[m];return n.createElement.apply(null,r)}return n.createElement.apply(null,o)}u.displayName="MDXCreateElement"},95176:(e,t,o)=>{o.r(t),o.d(t,{Badge:()=>f,Bullet:()=>i,SpecifiedBy:()=>u,assets:()=>m,contentTitle:()=>l,default:()=>y,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var n=o(87462),a=o(67294),s=o(3905);const r={id:"flow-node-commons",title:"FlowNodeCommons",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},l=void 0,c={unversionedId:"schemas/fluss/interfaces/flow-node-commons",id:"schemas/fluss/interfaces/flow-node-commons",title:"FlowNodeCommons",description:"No description",source:"@site/docs/schemas/fluss/interfaces/flow-node-commons.mdx",sourceDirName:"schemas/fluss/interfaces",slug:"/schemas/fluss/interfaces/flow-node-commons",permalink:"/doks/docs/schemas/fluss/interfaces/flow-node-commons",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/schemas/fluss/interfaces/flow-node-commons.mdx",tags:[],version:"current",frontMatter:{id:"flow-node-commons",title:"FlowNodeCommons",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},sidebar:"tutorialSidebar"},m={},d=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>FlowNodeCommons.<b>instream</b></code><Bullet /><code>[[StreamItem]]!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-flownodecommonsbinstreambcodestreamitem--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>FlowNodeCommons.<b>outstream</b></code><Bullet /><code>[[StreamItem]]!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-flownodecommonsboutstreambcodestreamitem--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>FlowNodeCommons.<b>constream</b></code><Bullet /><code>[[StreamItem]]!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-flownodecommonsbconstreambcodestreamitem--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>FlowNodeCommons.<b>constants</b></code><Bullet /><code>GenericScalar</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-flownodecommonsbconstantsbcodegenericscalar-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>FlowNodeCommons.<b>documentation</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-flownodecommonsbdocumentationbcodestring-",level:4},{value:"Implemented by",id:"implemented-by",level:3}],i=()=>(0,s.kt)(a.Fragment,null,(0,s.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),u=e=>(0,s.kt)(a.Fragment,null,"Specification",(0,s.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),f=e=>(0,s.kt)(a.Fragment,null,(0,s.kt)("span",{class:"badge badge--"+e.class},e.text)),p={toc:d,Bullet:i,SpecifiedBy:u,Badge:f};function y(e){let{components:t,...o}=e;return(0,s.kt)("wrapper",(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"No description"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-graphql"},"interface FlowNodeCommons {\n  instream: [[StreamItem]]!\n  outstream: [[StreamItem]]!\n  constream: [[StreamItem]]!\n  constants: GenericScalar\n  documentation: String\n}\n")),(0,s.kt)("h3",{id:"fields"},"Fields"),(0,s.kt)("h4",{id:"code-style-fontweight-normal-flownodecommonsbinstreambcodestreamitem--"},(0,s.kt)("a",{parentName:"h4",href:"#"},(0,s.kt)("code",{style:{fontWeight:"normal"}},"FlowNodeCommons.",(0,s.kt)("b",null,"instream"))),(0,s.kt)(i,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"h4",href:"/docs/schemas/fluss/objects/stream-item"},(0,s.kt)("inlineCode",{parentName:"a"},"[[StreamItem]]!"))," ",(0,s.kt)(f,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,s.kt)(f,{class:"secondary",text:"object",mdxType:"Badge"})),(0,s.kt)("blockquote",null),(0,s.kt)("h4",{id:"code-style-fontweight-normal-flownodecommonsboutstreambcodestreamitem--"},(0,s.kt)("a",{parentName:"h4",href:"#"},(0,s.kt)("code",{style:{fontWeight:"normal"}},"FlowNodeCommons.",(0,s.kt)("b",null,"outstream"))),(0,s.kt)(i,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"h4",href:"/docs/schemas/fluss/objects/stream-item"},(0,s.kt)("inlineCode",{parentName:"a"},"[[StreamItem]]!"))," ",(0,s.kt)(f,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,s.kt)(f,{class:"secondary",text:"object",mdxType:"Badge"})),(0,s.kt)("blockquote",null),(0,s.kt)("h4",{id:"code-style-fontweight-normal-flownodecommonsbconstreambcodestreamitem--"},(0,s.kt)("a",{parentName:"h4",href:"#"},(0,s.kt)("code",{style:{fontWeight:"normal"}},"FlowNodeCommons.",(0,s.kt)("b",null,"constream"))),(0,s.kt)(i,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"h4",href:"/docs/schemas/fluss/objects/stream-item"},(0,s.kt)("inlineCode",{parentName:"a"},"[[StreamItem]]!"))," ",(0,s.kt)(f,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,s.kt)(f,{class:"secondary",text:"object",mdxType:"Badge"})),(0,s.kt)("blockquote",null),(0,s.kt)("h4",{id:"code-style-fontweight-normal-flownodecommonsbconstantsbcodegenericscalar-"},(0,s.kt)("a",{parentName:"h4",href:"#"},(0,s.kt)("code",{style:{fontWeight:"normal"}},"FlowNodeCommons.",(0,s.kt)("b",null,"constants"))),(0,s.kt)(i,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"h4",href:"/docs/schemas/fluss/scalars/generic-scalar"},(0,s.kt)("inlineCode",{parentName:"a"},"GenericScalar"))," ",(0,s.kt)(f,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,s.kt)("blockquote",null),(0,s.kt)("h4",{id:"code-style-fontweight-normal-flownodecommonsbdocumentationbcodestring-"},(0,s.kt)("a",{parentName:"h4",href:"#"},(0,s.kt)("code",{style:{fontWeight:"normal"}},"FlowNodeCommons.",(0,s.kt)("b",null,"documentation"))),(0,s.kt)(i,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"h4",href:"/docs/schemas/fluss/scalars/string"},(0,s.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,s.kt)(f,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,s.kt)("blockquote",null),(0,s.kt)("h3",{id:"implemented-by"},"Implemented by"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/arg-node"},(0,s.kt)("inlineCode",{parentName:"a"},"ArgNode")),"  ",(0,s.kt)(f,{class:"secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(i,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/arkitekt-node"},(0,s.kt)("inlineCode",{parentName:"a"},"ArkitektNode")),"  ",(0,s.kt)(f,{class:"secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(i,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/kwarg-node"},(0,s.kt)("inlineCode",{parentName:"a"},"KwargNode")),"  ",(0,s.kt)(f,{class:"secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(i,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/reactive-node"},(0,s.kt)("inlineCode",{parentName:"a"},"ReactiveNode")),"  ",(0,s.kt)(f,{class:"secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(i,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/return-node"},(0,s.kt)("inlineCode",{parentName:"a"},"ReturnNode")),"  ",(0,s.kt)(f,{class:"secondary",text:"object",mdxType:"Badge"})))}y.isMDXComponent=!0}}]);