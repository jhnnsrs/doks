"use strict";(self.webpackChunkdoks=self.webpackChunkdoks||[]).push([[8437],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>u});var s=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,s)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,s,n=function(e,t){if(null==e)return{};var a,s,n={},r=Object.keys(e);for(s=0;s<r.length;s++)a=r[s],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)a=r[s],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=s.createContext({}),d=function(e){var t=s.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=d(e.components);return s.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},i=s.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),i=d(a),u=n,k=i["".concat(c,".").concat(u)]||i[u]||m[u]||r;return a?s.createElement(k,l(l({ref:t},p),{},{components:a})):s.createElement(k,l({ref:t},p))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,l=new Array(r);l[0]=i;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var d=2;d<r;d++)l[d]=a[d];return s.createElement.apply(null,l)}return s.createElement.apply(null,a)}i.displayName="MDXCreateElement"},57168:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>u,Bullet:()=>m,SpecifiedBy:()=>i,assets:()=>d,contentTitle:()=>o,default:()=>y,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var s=a(87462),n=a(67294),r=a(3905);const l={id:"id",title:"ID",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},o=void 0,c={unversionedId:"schemas/fluss/scalars/id",id:"schemas/fluss/scalars/id",title:"ID",description:'The ID scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as "4") or integer (such as 4) input value will be accepted as an ID.',source:"@site/docs/schemas/fluss/scalars/id.mdx",sourceDirName:"schemas/fluss/scalars",slug:"/schemas/fluss/scalars/id",permalink:"/doks/docs/schemas/fluss/scalars/id",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/schemas/fluss/scalars/id.mdx",tags:[],version:"current",frontMatter:{id:"id",title:"ID",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},sidebar:"tutorialSidebar"},d={},p=[{value:"Member of",id:"member-of",level:3}],m=()=>(0,r.kt)(n.Fragment,null,(0,r.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),i=e=>(0,r.kt)(n.Fragment,null,"Specification",(0,r.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),u=e=>(0,r.kt)(n.Fragment,null,(0,r.kt)("span",{class:"badge badge--"+e.class},e.text)),k={toc:p,Bullet:m,SpecifiedBy:i,Badge:u};function y(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,s.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ID")," scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as ",(0,r.kt)("inlineCode",{parentName:"p"},'"4"'),") or integer (such as ",(0,r.kt)("inlineCode",{parentName:"p"},"4"),") input value will be accepted as an ID."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"scalar ID\n")),(0,r.kt)("h3",{id:"member-of"},"Member of"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/mutations/alog"},(0,r.kt)("inlineCode",{parentName:"a"},"alog")),"  ",(0,r.kt)(u,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/mutations/delete-flow"},(0,r.kt)("inlineCode",{parentName:"a"},"deleteFlow")),"  ",(0,r.kt)(u,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/delete-flow-return"},(0,r.kt)("inlineCode",{parentName:"a"},"DeleteFlowReturn")),"  ",(0,r.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/mutations/delete-run"},(0,r.kt)("inlineCode",{parentName:"a"},"deleteRun")),"  ",(0,r.kt)(u,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/delete-run-return"},(0,r.kt)("inlineCode",{parentName:"a"},"DeleteRunReturn")),"  ",(0,r.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/mutations/delete-snapshot"},(0,r.kt)("inlineCode",{parentName:"a"},"deleteSnapshot")),"  ",(0,r.kt)(u,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/delete-snapshot-return"},(0,r.kt)("inlineCode",{parentName:"a"},"DeleteSnapshotReturn")),"  ",(0,r.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/mutations/delete-workspace"},(0,r.kt)("inlineCode",{parentName:"a"},"deleteWorkspace")),"  ",(0,r.kt)(u,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/delete-workspace-return"},(0,r.kt)("inlineCode",{parentName:"a"},"DeleteWorkspaceReturn")),"  ",(0,r.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/diagram"},(0,r.kt)("inlineCode",{parentName:"a"},"Diagram")),"  ",(0,r.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/queries/diagram"},(0,r.kt)("inlineCode",{parentName:"a"},"diagram")),"  ",(0,r.kt)(u,{class:"secondary",text:"query",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/event"},(0,r.kt)("inlineCode",{parentName:"a"},"Event")),"  ",(0,r.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/subscriptions/events"},(0,r.kt)("inlineCode",{parentName:"a"},"events")),"  ",(0,r.kt)(u,{class:"secondary",text:"subscription",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/queries/events-between"},(0,r.kt)("inlineCode",{parentName:"a"},"eventsBetween")),"  ",(0,r.kt)(u,{class:"secondary",text:"query",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/flow"},(0,r.kt)("inlineCode",{parentName:"a"},"Flow")),"  ",(0,r.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/queries/flow"},(0,r.kt)("inlineCode",{parentName:"a"},"flow")),"  ",(0,r.kt)(u,{class:"secondary",text:"query",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/queries/flows"},(0,r.kt)("inlineCode",{parentName:"a"},"flows")),"  ",(0,r.kt)(u,{class:"secondary",text:"query",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/reactive-template"},(0,r.kt)("inlineCode",{parentName:"a"},"ReactiveTemplate")),"  ",(0,r.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/queries/reactivetemplate"},(0,r.kt)("inlineCode",{parentName:"a"},"reactivetemplate")),"  ",(0,r.kt)(u,{class:"secondary",text:"query",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/run"},(0,r.kt)("inlineCode",{parentName:"a"},"Run")),"  ",(0,r.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/queries/run"},(0,r.kt)("inlineCode",{parentName:"a"},"run")),"  ",(0,r.kt)(u,{class:"secondary",text:"query",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/run-event"},(0,r.kt)("inlineCode",{parentName:"a"},"RunEvent")),"  ",(0,r.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/run-log"},(0,r.kt)("inlineCode",{parentName:"a"},"RunLog")),"  ",(0,r.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/queries/run-logs"},(0,r.kt)("inlineCode",{parentName:"a"},"runLogs")),"  ",(0,r.kt)(u,{class:"secondary",text:"query",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/queries/runs"},(0,r.kt)("inlineCode",{parentName:"a"},"runs")),"  ",(0,r.kt)(u,{class:"secondary",text:"query",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/mutations/snapshot"},(0,r.kt)("inlineCode",{parentName:"a"},"snapshot")),"  ",(0,r.kt)(u,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/snapshot"},(0,r.kt)("inlineCode",{parentName:"a"},"Snapshot")),"  ",(0,r.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/queries/snapshot"},(0,r.kt)("inlineCode",{parentName:"a"},"snapshot")),"  ",(0,r.kt)(u,{class:"secondary",text:"query",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/queries/snapshots"},(0,r.kt)("inlineCode",{parentName:"a"},"snapshots")),"  ",(0,r.kt)(u,{class:"secondary",text:"query",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/mutations/start"},(0,r.kt)("inlineCode",{parentName:"a"},"start")),"  ",(0,r.kt)(u,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/mutations/track"},(0,r.kt)("inlineCode",{parentName:"a"},"track")),"  ",(0,r.kt)(u,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/mutations/updatediagram"},(0,r.kt)("inlineCode",{parentName:"a"},"updatediagram")),"  ",(0,r.kt)(u,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/user"},(0,r.kt)("inlineCode",{parentName:"a"},"User")),"  ",(0,r.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"})))}y.isMDXComponent=!0}}]);