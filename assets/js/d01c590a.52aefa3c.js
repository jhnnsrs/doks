"use strict";(self.webpackChunkdoks=self.webpackChunkdoks||[]).push([[67465],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>u});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),i=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=i(e.components);return r.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=i(a),u=n,f=m["".concat(o,".").concat(u)]||m[u]||d[u]||s;return a?r.createElement(f,c(c({ref:t},p),{},{components:a})):r.createElement(f,c({ref:t},p))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,c=new Array(s);c[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:n,c[1]=l;for(var i=2;i<s;i++)c[i]=a[i];return r.createElement.apply(null,c)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},81858:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>u,Bullet:()=>d,SpecifiedBy:()=>m,assets:()=>i,contentTitle:()=>l,default:()=>k,frontMatter:()=>c,metadata:()=>o,toc:()=>p});var r=a(87462),n=a(67294),s=a(3905);const c={id:"generic-scalar",title:"GenericScalar",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},l=void 0,o={unversionedId:"schemas/fluss/scalars/generic-scalar",id:"schemas/fluss/scalars/generic-scalar",title:"GenericScalar",description:"The GenericScalar scalar type represents a generic",source:"@site/docs/schemas/fluss/scalars/generic-scalar.mdx",sourceDirName:"schemas/fluss/scalars",slug:"/schemas/fluss/scalars/generic-scalar",permalink:"/doks/docs/schemas/fluss/scalars/generic-scalar",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/schemas/fluss/scalars/generic-scalar.mdx",tags:[],version:"current",frontMatter:{id:"generic-scalar",title:"GenericScalar",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},sidebar:"tutorialSidebar"},i={},p=[{value:"Member of",id:"member-of",level:3}],d=()=>(0,s.kt)(n.Fragment,null,(0,s.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),m=e=>(0,s.kt)(n.Fragment,null,"Specification",(0,s.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),u=e=>(0,s.kt)(n.Fragment,null,(0,s.kt)("span",{class:"badge badge--"+e.class},e.text)),f={toc:p,Bullet:d,SpecifiedBy:m,Badge:u};function k(e){let{components:t,...a}=e;return(0,s.kt)("wrapper",(0,r.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"GenericScalar")," scalar type represents a generic\nGraphQL scalar value that could be:\nString, Boolean, Int, Float, List or Object."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-graphql"},"scalar GenericScalar\n")),(0,s.kt)("h3",{id:"member-of"},"Member of"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/arg-node"},(0,s.kt)("inlineCode",{parentName:"a"},"ArgNode")),"  ",(0,s.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(d,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/arkitekt-node"},(0,s.kt)("inlineCode",{parentName:"a"},"ArkitektNode")),"  ",(0,s.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(d,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/flow"},(0,s.kt)("inlineCode",{parentName:"a"},"Flow")),"  ",(0,s.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(d,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/interfaces/flow-node-commons"},(0,s.kt)("inlineCode",{parentName:"a"},"FlowNodeCommons")),"  ",(0,s.kt)(u,{class:"secondary",text:"interface",mdxType:"Badge"}),(0,s.kt)(d,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/global"},(0,s.kt)("inlineCode",{parentName:"a"},"Global")),"  ",(0,s.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(d,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/inputs/global-input"},(0,s.kt)("inlineCode",{parentName:"a"},"GlobalInput")),"  ",(0,s.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"}),(0,s.kt)(d,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/kwarg-node"},(0,s.kt)("inlineCode",{parentName:"a"},"KwargNode")),"  ",(0,s.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(d,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/inputs/node-input"},(0,s.kt)("inlineCode",{parentName:"a"},"NodeInput")),"  ",(0,s.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"}),(0,s.kt)(d,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/reactive-node"},(0,s.kt)("inlineCode",{parentName:"a"},"ReactiveNode")),"  ",(0,s.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(d,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/reactive-template"},(0,s.kt)("inlineCode",{parentName:"a"},"ReactiveTemplate")),"  ",(0,s.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(d,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/return-node"},(0,s.kt)("inlineCode",{parentName:"a"},"ReturnNode")),"  ",(0,s.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(d,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/docs/schemas/fluss/objects/user"},(0,s.kt)("inlineCode",{parentName:"a"},"User")),"  ",(0,s.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"})))}k.isMDXComponent=!0}}]);