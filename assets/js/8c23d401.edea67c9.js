"use strict";(self.webpackChunkdoks=self.webpackChunkdoks||[]).push([[44715],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>l});var s=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,s)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,s,r=function(e,t){if(null==e)return{};var a,s,r={},n=Object.keys(e);for(s=0;s<n.length;s++)a=n[s],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(s=0;s<n.length;s++)a=n[s],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=s.createContext({}),p=function(e){var t=s.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return s.createElement(d.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},m=s.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,d=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(a),l=r,y=m["".concat(d,".").concat(l)]||m[l]||k[l]||n;return a?s.createElement(y,o(o({ref:t},c),{},{components:a})):s.createElement(y,o({ref:t},c))}));function l(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,o=new Array(n);o[0]=m;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<n;p++)o[p]=a[p];return s.createElement.apply(null,o)}return s.createElement.apply(null,a)}m.displayName="MDXCreateElement"},29135:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>l,Bullet:()=>k,SpecifiedBy:()=>m,assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var s=a(87462),r=a(67294),n=a(3905);const o={id:"id",title:"ID",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},i=void 0,d={unversionedId:"schemas/arkitekt/scalars/id",id:"schemas/arkitekt/scalars/id",title:"ID",description:'The ID scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as "4") or integer (such as 4) input value will be accepted as an ID.',source:"@site/docs/schemas/arkitekt/scalars/id.mdx",sourceDirName:"schemas/arkitekt/scalars",slug:"/schemas/arkitekt/scalars/id",permalink:"/doks/docs/schemas/arkitekt/scalars/id",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/schemas/arkitekt/scalars/id.mdx",tags:[],version:"current",frontMatter:{id:"id",title:"ID",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},sidebar:"tutorialSidebar"},p={},c=[{value:"Returned by",id:"returned-by",level:3},{value:"Member of",id:"member-of",level:3}],k=()=>(0,n.kt)(r.Fragment,null,(0,n.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),m=e=>(0,n.kt)(r.Fragment,null,"Specification",(0,n.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),l=e=>(0,n.kt)(r.Fragment,null,(0,n.kt)("span",{class:"badge badge--"+e.class},e.text)),y={toc:c,Bullet:k,SpecifiedBy:m,Badge:l};function u(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,s.Z)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"ID")," scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as ",(0,n.kt)("inlineCode",{parentName:"p"},'"4"'),") or integer (such as ",(0,n.kt)("inlineCode",{parentName:"p"},"4"),") input value will be accepted as an ID."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-graphql"},"scalar ID\n")),(0,n.kt)("h3",{id:"returned-by"},"Returned by"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/mutations/slate"},(0,n.kt)("inlineCode",{parentName:"a"},"slate")),"  ",(0,n.kt)(l,{class:"secondary",text:"mutation",mdxType:"Badge"})),(0,n.kt)("h3",{id:"member-of"},"Member of"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/mutations/ack"},(0,n.kt)("inlineCode",{parentName:"a"},"ack")),"  ",(0,n.kt)(l,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/agent"},(0,n.kt)("inlineCode",{parentName:"a"},"Agent")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/queries/agent"},(0,n.kt)("inlineCode",{parentName:"a"},"agent")),"  ",(0,n.kt)(l,{class:"secondary",text:"query",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/agent-event"},(0,n.kt)("inlineCode",{parentName:"a"},"AgentEvent")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/queries/allnodes"},(0,n.kt)("inlineCode",{parentName:"a"},"allnodes")),"  ",(0,n.kt)(l,{class:"secondary",text:"query",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/queries/allprovisions"},(0,n.kt)("inlineCode",{parentName:"a"},"allprovisions")),"  ",(0,n.kt)(l,{class:"secondary",text:"query",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/app-repository"},(0,n.kt)("inlineCode",{parentName:"a"},"AppRepository")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/mutations/assign"},(0,n.kt)("inlineCode",{parentName:"a"},"assign")),"  ",(0,n.kt)(l,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/assignation"},(0,n.kt)("inlineCode",{parentName:"a"},"Assignation")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/queries/assignation"},(0,n.kt)("inlineCode",{parentName:"a"},"assignation")),"  ",(0,n.kt)(l,{class:"secondary",text:"query",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/subscriptions/assignation"},(0,n.kt)("inlineCode",{parentName:"a"},"assignation")),"  ",(0,n.kt)(l,{class:"secondary",text:"subscription",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/assignation-log"},(0,n.kt)("inlineCode",{parentName:"a"},"AssignationLog")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/assignations-event"},(0,n.kt)("inlineCode",{parentName:"a"},"AssignationsEvent")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/mutations/change-permissions"},(0,n.kt)("inlineCode",{parentName:"a"},"changePermissions")),"  ",(0,n.kt)(l,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/mutations/create-template"},(0,n.kt)("inlineCode",{parentName:"a"},"createTemplate")),"  ",(0,n.kt)(l,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/mutations/delete-node"},(0,n.kt)("inlineCode",{parentName:"a"},"deleteNode")),"  ",(0,n.kt)(l,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/mutations/deleterepo"},(0,n.kt)("inlineCode",{parentName:"a"},"deleterepo")),"  ",(0,n.kt)(l,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/group"},(0,n.kt)("inlineCode",{parentName:"a"},"Group")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/inputs/group-assignment-input"},(0,n.kt)("inlineCode",{parentName:"a"},"GroupAssignmentInput")),"  ",(0,n.kt)(l,{class:"secondary",text:"input",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/mutations/link"},(0,n.kt)("inlineCode",{parentName:"a"},"link")),"  ",(0,n.kt)(l,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/queries/linkableprovisions"},(0,n.kt)("inlineCode",{parentName:"a"},"linkableprovisions")),"  ",(0,n.kt)(l,{class:"secondary",text:"query",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/lok-app"},(0,n.kt)("inlineCode",{parentName:"a"},"LokApp")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/mirror-repository"},(0,n.kt)("inlineCode",{parentName:"a"},"MirrorRepository")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/node"},(0,n.kt)("inlineCode",{parentName:"a"},"Node")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/queries/node"},(0,n.kt)("inlineCode",{parentName:"a"},"node")),"  ",(0,n.kt)(l,{class:"secondary",text:"query",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/node-event"},(0,n.kt)("inlineCode",{parentName:"a"},"NodeEvent")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/subscriptions/node-event"},(0,n.kt)("inlineCode",{parentName:"a"},"nodeEvent")),"  ",(0,n.kt)(l,{class:"secondary",text:"subscription",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/permission"},(0,n.kt)("inlineCode",{parentName:"a"},"Permission")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/queries/permissions-of"},(0,n.kt)("inlineCode",{parentName:"a"},"permissionsOf")),"  ",(0,n.kt)(l,{class:"secondary",text:"query",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/mutations/provide"},(0,n.kt)("inlineCode",{parentName:"a"},"provide")),"  ",(0,n.kt)(l,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/provision"},(0,n.kt)("inlineCode",{parentName:"a"},"Provision")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/queries/provision"},(0,n.kt)("inlineCode",{parentName:"a"},"provision")),"  ",(0,n.kt)(l,{class:"secondary",text:"query",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/subscriptions/provision"},(0,n.kt)("inlineCode",{parentName:"a"},"provision")),"  ",(0,n.kt)(l,{class:"secondary",text:"subscription",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/provision-log"},(0,n.kt)("inlineCode",{parentName:"a"},"ProvisionLog")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/provisions-event"},(0,n.kt)("inlineCode",{parentName:"a"},"ProvisionsEvent")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/registry"},(0,n.kt)("inlineCode",{parentName:"a"},"Registry")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/interfaces/repository"},(0,n.kt)("inlineCode",{parentName:"a"},"Repository")),"  ",(0,n.kt)(l,{class:"secondary",text:"interface",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/queries/repository"},(0,n.kt)("inlineCode",{parentName:"a"},"repository")),"  ",(0,n.kt)(l,{class:"secondary",text:"query",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/reservation"},(0,n.kt)("inlineCode",{parentName:"a"},"Reservation")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/queries/reservation"},(0,n.kt)("inlineCode",{parentName:"a"},"reservation")),"  ",(0,n.kt)(l,{class:"secondary",text:"query",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/subscriptions/reservation"},(0,n.kt)("inlineCode",{parentName:"a"},"reservation")),"  ",(0,n.kt)(l,{class:"secondary",text:"subscription",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/reservation-log"},(0,n.kt)("inlineCode",{parentName:"a"},"ReservationLog")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/reservations-event"},(0,n.kt)("inlineCode",{parentName:"a"},"ReservationsEvent")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/mutations/reserve"},(0,n.kt)("inlineCode",{parentName:"a"},"reserve")),"  ",(0,n.kt)(l,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/reserve-params"},(0,n.kt)("inlineCode",{parentName:"a"},"ReserveParams")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/inputs/reserve-params-input"},(0,n.kt)("inlineCode",{parentName:"a"},"ReserveParamsInput")),"  ",(0,n.kt)(l,{class:"secondary",text:"input",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/mutations/reset-nodes"},(0,n.kt)("inlineCode",{parentName:"a"},"resetNodes")),"  ",(0,n.kt)(l,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/structure"},(0,n.kt)("inlineCode",{parentName:"a"},"Structure")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/queries/structure"},(0,n.kt)("inlineCode",{parentName:"a"},"structure")),"  ",(0,n.kt)(l,{class:"secondary",text:"query",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/template"},(0,n.kt)("inlineCode",{parentName:"a"},"Template")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/queries/template"},(0,n.kt)("inlineCode",{parentName:"a"},"template")),"  ",(0,n.kt)(l,{class:"secondary",text:"query",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/queries/templates"},(0,n.kt)("inlineCode",{parentName:"a"},"templates")),"  ",(0,n.kt)(l,{class:"secondary",text:"query",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/todo-event"},(0,n.kt)("inlineCode",{parentName:"a"},"TodoEvent")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/mutations/unassign"},(0,n.kt)("inlineCode",{parentName:"a"},"unassign")),"  ",(0,n.kt)(l,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/mutations/unlink"},(0,n.kt)("inlineCode",{parentName:"a"},"unlink")),"  ",(0,n.kt)(l,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/mutations/unprovide"},(0,n.kt)("inlineCode",{parentName:"a"},"unprovide")),"  ",(0,n.kt)(l,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/mutations/unreserve"},(0,n.kt)("inlineCode",{parentName:"a"},"unreserve")),"  ",(0,n.kt)(l,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/mutations/update-mirror"},(0,n.kt)("inlineCode",{parentName:"a"},"updateMirror")),"  ",(0,n.kt)(l,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/user"},(0,n.kt)("inlineCode",{parentName:"a"},"User")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/queries/user"},(0,n.kt)("inlineCode",{parentName:"a"},"user")),"  ",(0,n.kt)(l,{class:"secondary",text:"query",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/waiter"},(0,n.kt)("inlineCode",{parentName:"a"},"Waiter")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(k,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/docs/schemas/arkitekt/objects/waiter-event"},(0,n.kt)("inlineCode",{parentName:"a"},"WaiterEvent")),"  ",(0,n.kt)(l,{class:"secondary",text:"object",mdxType:"Badge"})))}u.isMDXComponent=!0}}]);