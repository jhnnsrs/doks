"use strict";(self.webpackChunkdoks=self.webpackChunkdoks||[]).push([[94440],{3905:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>p});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},i=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,i=r(e,["components","mdxType","originalType","parentName"]),u=d(n),p=o,f=u["".concat(s,".").concat(p)]||u[p]||m[p]||l;return n?a.createElement(f,c(c({ref:t},i),{},{components:n})):a.createElement(f,c({ref:t},i))}));function p(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,c=new Array(l);c[0]=u;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r.mdxType="string"==typeof e?e:o,c[1]=r;for(var d=2;d<l;d++)c[d]=n[d];return a.createElement.apply(null,c)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},48184:(e,t,n)=>{n.r(t),n.d(t,{Badge:()=>p,Bullet:()=>m,SpecifiedBy:()=>u,assets:()=>d,contentTitle:()=>r,default:()=>y,frontMatter:()=>c,metadata:()=>s,toc:()=>i});var a=n(87462),o=n(67294),l=n(3905);const c={id:"reactive-node",title:"ReactiveNode",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},r=void 0,s={unversionedId:"schemas/fluss/objects/reactive-node",id:"schemas/fluss/objects/reactive-node",title:"ReactiveNode",description:"No description",source:"@site/docs/schemas/fluss/objects/reactive-node.mdx",sourceDirName:"schemas/fluss/objects",slug:"/schemas/fluss/objects/reactive-node",permalink:"/doks/docs/schemas/fluss/objects/reactive-node",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/schemas/fluss/objects/reactive-node.mdx",tags:[],version:"current",frontMatter:{id:"reactive-node",title:"ReactiveNode",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},sidebar:"tutorialSidebar"},d={},i=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>ReactiveNode.<b>id</b></code><Bullet /><code>String!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-reactivenodebidbcodestring--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ReactiveNode.<b>position</b></code><Bullet /><code>Position!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-reactivenodebpositionbcodeposition--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ReactiveNode.<b>typename</b></code><Bullet /><code>String!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-reactivenodebtypenamebcodestring--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ReactiveNode.<b>instream</b></code><Bullet /><code>[[StreamItem]]!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-reactivenodebinstreambcodestreamitem--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ReactiveNode.<b>outstream</b></code><Bullet /><code>[[StreamItem]]!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-reactivenodeboutstreambcodestreamitem--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ReactiveNode.<b>constream</b></code><Bullet /><code>[[StreamItem]]!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-reactivenodebconstreambcodestreamitem--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ReactiveNode.<b>constants</b></code><Bullet /><code>GenericScalar</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-reactivenodebconstantsbcodegenericscalar-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ReactiveNode.<b>documentation</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-reactivenodebdocumentationbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ReactiveNode.<b>implementation</b></code><Bullet /><code>ReactiveImplementationModelInput!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-reactivenodebimplementationbcodereactiveimplementationmodelinput--",level:4},{value:"Interfaces",id:"interfaces",level:3},{value:'<code>FlowNode</code> <Badge class="secondary" text="interface"/>',id:"flownode-",level:4},{value:'<code>FlowNodeCommons</code> <Badge class="secondary" text="interface"/>',id:"flownodecommons-",level:4}],m=()=>(0,l.kt)(o.Fragment,null,(0,l.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),u=e=>(0,l.kt)(o.Fragment,null,"Specification",(0,l.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),p=e=>(0,l.kt)(o.Fragment,null,(0,l.kt)("span",{class:"badge badge--"+e.class},e.text)),f={toc:i,Bullet:m,SpecifiedBy:u,Badge:p};function y(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"No description"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},"type ReactiveNode implements FlowNode, FlowNodeCommons {\n  id: String!\n  position: Position!\n  typename: String!\n  instream: [[StreamItem]]!\n  outstream: [[StreamItem]]!\n  constream: [[StreamItem]]!\n  constants: GenericScalar\n  documentation: String\n  implementation: ReactiveImplementationModelInput!\n}\n")),(0,l.kt)("h3",{id:"fields"},"Fields"),(0,l.kt)("h4",{id:"code-style-fontweight-normal-reactivenodebidbcodestring--"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"ReactiveNode.",(0,l.kt)("b",null,"id"))),(0,l.kt)(m,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/docs/schemas/fluss/scalars/string"},(0,l.kt)("inlineCode",{parentName:"a"},"String!"))," ",(0,l.kt)(p,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,l.kt)(p,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,l.kt)("blockquote",null),(0,l.kt)("h4",{id:"code-style-fontweight-normal-reactivenodebpositionbcodeposition--"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"ReactiveNode.",(0,l.kt)("b",null,"position"))),(0,l.kt)(m,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/docs/schemas/fluss/objects/position"},(0,l.kt)("inlineCode",{parentName:"a"},"Position!"))," ",(0,l.kt)(p,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,l.kt)(p,{class:"secondary",text:"object",mdxType:"Badge"})),(0,l.kt)("blockquote",null),(0,l.kt)("h4",{id:"code-style-fontweight-normal-reactivenodebtypenamebcodestring--"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"ReactiveNode.",(0,l.kt)("b",null,"typename"))),(0,l.kt)(m,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/docs/schemas/fluss/scalars/string"},(0,l.kt)("inlineCode",{parentName:"a"},"String!"))," ",(0,l.kt)(p,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,l.kt)(p,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,l.kt)("blockquote",null),(0,l.kt)("h4",{id:"code-style-fontweight-normal-reactivenodebinstreambcodestreamitem--"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"ReactiveNode.",(0,l.kt)("b",null,"instream"))),(0,l.kt)(m,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/docs/schemas/fluss/objects/stream-item"},(0,l.kt)("inlineCode",{parentName:"a"},"[[StreamItem]]!"))," ",(0,l.kt)(p,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,l.kt)(p,{class:"secondary",text:"object",mdxType:"Badge"})),(0,l.kt)("blockquote",null),(0,l.kt)("h4",{id:"code-style-fontweight-normal-reactivenodeboutstreambcodestreamitem--"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"ReactiveNode.",(0,l.kt)("b",null,"outstream"))),(0,l.kt)(m,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/docs/schemas/fluss/objects/stream-item"},(0,l.kt)("inlineCode",{parentName:"a"},"[[StreamItem]]!"))," ",(0,l.kt)(p,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,l.kt)(p,{class:"secondary",text:"object",mdxType:"Badge"})),(0,l.kt)("blockquote",null),(0,l.kt)("h4",{id:"code-style-fontweight-normal-reactivenodebconstreambcodestreamitem--"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"ReactiveNode.",(0,l.kt)("b",null,"constream"))),(0,l.kt)(m,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/docs/schemas/fluss/objects/stream-item"},(0,l.kt)("inlineCode",{parentName:"a"},"[[StreamItem]]!"))," ",(0,l.kt)(p,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,l.kt)(p,{class:"secondary",text:"object",mdxType:"Badge"})),(0,l.kt)("blockquote",null),(0,l.kt)("h4",{id:"code-style-fontweight-normal-reactivenodebconstantsbcodegenericscalar-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"ReactiveNode.",(0,l.kt)("b",null,"constants"))),(0,l.kt)(m,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/docs/schemas/fluss/scalars/generic-scalar"},(0,l.kt)("inlineCode",{parentName:"a"},"GenericScalar"))," ",(0,l.kt)(p,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,l.kt)("blockquote",null),(0,l.kt)("h4",{id:"code-style-fontweight-normal-reactivenodebdocumentationbcodestring-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"ReactiveNode.",(0,l.kt)("b",null,"documentation"))),(0,l.kt)(m,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/docs/schemas/fluss/scalars/string"},(0,l.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,l.kt)(p,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,l.kt)("blockquote",null),(0,l.kt)("h4",{id:"code-style-fontweight-normal-reactivenodebimplementationbcodereactiveimplementationmodelinput--"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"ReactiveNode.",(0,l.kt)("b",null,"implementation"))),(0,l.kt)(m,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/docs/schemas/fluss/enums/reactive-implementation-model-input"},(0,l.kt)("inlineCode",{parentName:"a"},"ReactiveImplementationModelInput!"))," ",(0,l.kt)(p,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,l.kt)(p,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,l.kt)("blockquote",null),(0,l.kt)("h3",{id:"interfaces"},"Interfaces"),(0,l.kt)("h4",{id:"flownode-"},(0,l.kt)("a",{parentName:"h4",href:"/docs/schemas/fluss/interfaces/flow-node"},(0,l.kt)("inlineCode",{parentName:"a"},"FlowNode"))," ",(0,l.kt)(p,{class:"secondary",text:"interface",mdxType:"Badge"})),(0,l.kt)("blockquote",null),(0,l.kt)("h4",{id:"flownodecommons-"},(0,l.kt)("a",{parentName:"h4",href:"/docs/schemas/fluss/interfaces/flow-node-commons"},(0,l.kt)("inlineCode",{parentName:"a"},"FlowNodeCommons"))," ",(0,l.kt)(p,{class:"secondary",text:"interface",mdxType:"Badge"})),(0,l.kt)("blockquote",null))}y.isMDXComponent=!0}}]);